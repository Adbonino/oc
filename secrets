$ oc create secret generic my_secreto --from-literal key1=secret1 key2=secret2

$ oc create secret generic ssh-keys --from-file id_rsa=/path-to/id_rsa --from-file id_rsa.pub=/path-to/id_rsa.pub

$ oc create secret tls secret-tls --cert /path-to-certificate --key /path-to-key

Ejemplo:
$ oc create secret generic demo-secret --from-literal user=demo-user --from-literal root_passwrod=zT1KTgk

env:
  - name: MYSQL_ROOT_PASWORD
    valueFrom:
      secretKeyRef:
        name: demo-secret
        key: root_password
        
$ oc set env deployment/demo --from secret/demo-secret --prefix MYSQL_
genero las varialbes de ambiente MYSQL_USER y MYSQL_ROOT_PASSWORD


monto un secreto en un volumen

$ oc set volume deployment/demo --add --type secret --secret-name demo-secret --mount-path /app-secrets

$ oc create configmap my-config --from-literal key1=confgi1 --from-literal key2=config2

Actualizacion de los secretos

$ oc extract secret/demo-secret -n openshift-config --to /tmp/ --confirm
Actualizo los archivos y los cargo

$ oc set data secret/demo-secret -n openshift-config --from-file /tmp/demo-secret

LAB:

$ oc new-project authorization-secrets
$ oc create secret generic mysql --from-literal user=myuser --from-literal password=redhat123 --from-literal dalabase=test_secrets --from-literal hostname=mysql
$ oc new-app --name mysql --docker-image registry.redhat.io/rhel8/mysql-80:1
$ oc get pods -w
$ oc set env deployment/mysql --from secret/mysql --prefix MYSQL_
$ oc set volume deployment/mysql --add --type secret --mount-path /run/secrets/mysql --secret-name mysql
$ oc get pods
$ oc rsh mysql-dddddddddddd
  mysql -u myuser --password=redhat123 test_secrets -e 'show databases;'
